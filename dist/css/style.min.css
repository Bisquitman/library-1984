@charset "UTF-8";/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:montserrat;font-weight:700;font-display:swap;src:url(../assets/fonts/montserrat-700.woff2) format("woff2"),url(../assets/fonts/montserrat-700.woff) format("woff")}@font-face{font-family:montserrat;font-weight:500;font-display:swap;src:url(../assets/fonts/montserrat-500.woff2) format("woff2"),url(../assets/fonts/montserrat-500.woff) format("woff")}@font-face{font-family:montserrat;font-weight:400;font-display:swap;src:url(../assets/fonts/montserrat-400.woff2) format("woff2"),url(../assets/fonts/montserrat-400.woff) format("woff")}html{position:relative;box-sizing:border-box;min-width:320px}*,::after,::before{box-sizing:inherit}body{min-height:100vh}.body{font-family:Montserrat,sans-serif;color:#fff;line-height:1.3;background-color:#000;background-image:url(../img/bg-fire.svg);background-size:cover;background-position:center top 50%;background-repeat:no-repeat;background-attachment:fixed}.body_gradient{background-image:linear-gradient(180deg,rgba(0,0,0,0) 50%,#000 100%),url(../img/bg-fire.svg)}img{max-width:100%;height:auto}button,input,textarea{font:inherit;outline:0;border:none}button{padding:0;cursor:pointer;border:none;outline:0}a{text-decoration:none;color:inherit}ul{list-style:none;padding:0;margin:0}figure,h1,h2,h3,p{margin:0}fieldset{border:none;margin:0;padding:0}iframe{border:none}.visually-hidden{position:absolute!important;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);padding:0!important;border:0!important;height:1px!important;width:1px!important;overflow:hidden}.container{max-width:1100px;padding:0 20px;margin:0 auto}.hidden,.hide{display:none}section{padding:8px 0 80px 0}.not-valid{box-shadow:0 0 0 3px tomato}.header__container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.header__logo{height:40px}.header__btn-add{display:none}.header__btn{width:40px;height:40px;background-size:24px;background-repeat:no-repeat;background-color:transparent;border:0}.header__btn-search{background-image:url(../img/search.svg);background-position:center right}.header__btn-back{background-image:url(../img/arrow-back.svg);background-position:center center}.header__btn-delete{background-image:url(../img/delete.svg);background-position:center center}.library__header{position:relative;margin-bottom:15px}.library__header:before{position:absolute;content:"";display:block;width:174px;height:174px;top:-55px;left:-46px;background-color:red;filter:blur(150px);z-index:-1}.library__title{font-weight:700;font-size:26px;line-height:1.23;margin-bottom:8px}.library__count{font-size:14px;line-height:120%;color:#eaeaea;margin-bottom:25px}.library__list{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:15px 26px;max-width:780px}.library__add-btn{padding:9px;width:44px;height:44px;border-radius:50%;border:none;outline:0;background-color:#f87c09;color:#fff}.fields{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:20px}.fields__block{position:relative;z-index:3}.fields__btn{background-color:#eaeaea;border-radius:16px;padding:8px;font-size:12px;line-height:100%;text-align:center;color:#181818}.fields__button{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;gap:4px;height:24px;font-weight:500;font-size:10px;line-height:130%;background-color:transparent;color:#fff;transition:color .36s ease-in-out}.fields__button:hover{color:#f87c09}.fields__list{display:none;position:absolute;top:calc(100% + 3px);background-color:#fff;color:#000;padding:15px;min-width:100%;width:-webkit-max-content;width:-moz-max-content;width:max-content;box-shadow:0 2px 6px rgba(0,0,0,.15);border-radius:10px}.fields__list_active{display:block}.fields__list_sort{left:0}.fields__list_filter{right:0}.fields__item{margin-bottom:15px}.fields__item:last-child{margin-bottom:0}.card{background-color:#fff;box-shadow:0 4px 10px rgba(0,0,0,.1);border-radius:10px;color:#000;max-width:336px;padding:8px 8px 10px;display:-ms-flexbox;display:flex;gap:10px}.card__wrapper{position:relative;width:100px;height:148px;border-radius:4px;-ms-flex-negative:0;flex-shrink:0;overflow:hidden}.card__image{height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.card__label{position:absolute;bottom:8px;left:50%;-ms-transform:translateX(-50%);transform:translateX(-50%);padding:5px 6px;border-radius:16px;width:92%;background-color:#fff;font-weight:400;font-size:10px;line-height:1;text-align:center;color:#181818;white-space:nowrap}.card__content{padding-top:3px}.card__title{font-weight:500;font-size:16px;line-height:120%;margin-bottom:2px}.card__author{font-weight:500;font-size:12px;line-height:120%;color:#6b6b6b;margin-bottom:10px}.card__description{font-size:12px;line-height:120%;margin-bottom:6px}.card__rating{display:-ms-flexbox;display:flex}.card__rating-star{width:18px;height:18px;margin-right:1px}.card__rating-star:last-child{margin-right:0}.book__header{margin-bottom:16px}.book__container{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;gap:20px}.book__wrapper{max-width:168px;margin:0 auto}.book__image{border-radius:6px}.book__label{width:100%;max-width:320px;padding:18px;border-radius:30px;font-weight:500;font-size:14px;line-height:100%;text-align:center;color:#000;background-color:#fff}.book__label_img{display:none}.book__content{color:#fff}.book__title{font-weight:700;font-size:26px;line-height:1.23;margin-bottom:4px}.book__author{font-size:14px;line-height:120%;color:#eaeaea;margin-bottom:15px}.book__rating{display:-ms-flexbox;display:flex;margin-bottom:15px}.book__rating-star{width:36px;height:36px;margin-right:1px}.book__rating-star:last-child{margin-right:0}.book__subtitle{font-weight:500;font-size:12px;line-height:130%;margin-bottom:4px}.book__description{font-size:12px;line-height:130%}.add__form{padding:14px 0;max-width:698px;margin-left:auto;margin-right:auto}.add__title{font-weight:700;font-size:26px;line-height:1.23;margin-bottom:8px}.add__subtitle{font-weight:500;font-size:12px;line-height:100%;margin-bottom:15px}.add__step{color:#eaeaea;font-size:14px;line-height:100%;margin-bottom:30px}.add__label{display:inline-block;font-weight:500;font-size:14px;line-height:100%;padding-left:8px;margin-bottom:8px}.add__text{background-color:#fff;border:1px solid #eaeaea;border-radius:10px;width:100%;height:70px;padding:15px;margin-bottom:22px;font-size:14px}.add__text:active{border:1px solid #6b6b6b}.add__text:focus{border:1px solid #000}.add__text_area{min-height:120px;resize:none}.add__btn{width:100%;height:50px;max-width:320px;background-color:#f87c09;border-radius:8px;font-weight:500;font-size:14px;line-height:100%;text-align:center;color:#fff;border:1px solid transparent;transition:background-color .36s ease-in-out,outline-color .36s ease-in-out}.add__btn:hover{background-color:#ff922e}.add__btn:disabled{background-color:#eaeaea}.add__btn:active,.add__btn:focus{border-color:#fff}.upload{max-width:222px;margin:0 auto 15px}.upload__preview{display:none}.upload__file{display:none}.upload__label{display:block;width:222px;height:290px;background-image:url(../img/upload.jpg);border-radius:6px;background-size:cover;cursor:pointer}.upload__label_active{background-image:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.status{margin-bottom:40px}.status__list{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:15px}.status__radio{position:absolute;-webkit-appearance:none;-moz-appearance:none;appearance:none}.status__label{display:inline-block;padding:8px;background-color:#fff;font-size:12px;line-height:100%;color:#000;border-radius:16px;outline:1px solid transparent;transition:background-color .36s ease-in-out}.status__label:hover{background-color:#eaeaea}.status__radio:focus+.status__label{outline-color:#6b6b6b}.status__radio:active+.status__label{outline-color:#f87c09}.status__radio:checked+.status__label{outline-color:#f87c09;background-color:#f87c09}.star__list{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:end;justify-content:flex-end}.star__icon{width:36px;height:36px;background-image:url(../img/star-o.svg);background-repeat:no-repeat;background-size:36px;background-position:center;cursor:pointer}.star__radio{position:absolute;-webkit-appearance:none;-moz-appearance:none;appearance:none}.star__icon:hover,.star__icon:hover~.star__icon,.star__radio:checked~.star__icon{background-image:url(../img/star.svg)}.search{width:100%;max-width:462px;position:absolute;right:0;top:-48px;transition:transform .5s ease-in-out}.search_active{-ms-transform:translateY(56px);transform:translateY(56px)}.search__form{position:relative}.search__input{width:100%;height:40px;background-color:#fff;border-radius:20px;padding:3px 40px 3px 20px;outline:1px solid transparent;outline-offset:-1px}.search__input:focus{outline-color:#6b6b6b}.search__button{position:absolute;right:15px;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);color:#000;background-color:transparent;width:24px;height:24px}.footer{position:fixed;bottom:0;left:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:74px;padding:0 20px;background-color:#000;z-index:4}@media (min-width:768px){.container{padding:0 35px}.header{padding:20px 0 15px}.library__header:before{content:none}.book__container{gap:30px}.book__wrapper{max-width:300px}.search_active{-ms-transform:translateY(76px);transform:translateY(76px)}}@media (min-width:1024px){.container{padding:0 45px}.header__logo{height:66px;margin-right:auto}.header__btn-add{display:block;width:320px;height:50px;font-weight:500;font-size:14px;line-height:100%;color:#fff;background-color:#f87c09;border-radius:8px;margin-right:102px}.library__footer{display:none}.fields__block{min-width:142px}.fields__button{font-size:14px;width:100%}.fields__list{top:calc(100% + 20px)}.fields__list_filter{display:block}.book__container{-ms-flex-direction:row;flex-direction:row;gap:50px}.book__wrapper{max-width:250px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;gap:20px}.book__label_img{display:block;margin-left:auto;margin-right:auto}.book__title{font-size:40px}.book__author{font-size:18px}.book__subtitle{font-size:14px}.book__description{font-size:14px}.book__footer{display:none}.search{max-width:580px}.search_active{-ms-transform:translateY(86px);transform:translateY(86px)}}@media (min-width:1280px){.header{padding:30px 0 25px}.card{max-width:377px}.search_active{-ms-transform:translateY(96px);transform:translateY(96px)}}@media (max-width:375px){.library__list-container{padding:0 12px}.fields__list_sort{left:-8px}.fields__list_filter{right:-8px}.add__container{padding:0 12px}}@media (max-height:500px){.footer{width:auto;right:0;-ms-flex-pack:end;justify-content:flex-end;padding:20px;background-color:transparent}.book__footer{width:100%;-ms-flex-pack:center;justify-content:center;background-color:#000}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
